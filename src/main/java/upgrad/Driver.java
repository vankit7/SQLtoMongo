package upgrad;

import com.mongodb.client.*;
import org.bson.Document;
import java.sql.*;

public class Driver {


    /**
     * Driver class main method
     * @param args
     * @param
     * @throws SQLException
     */
    public static void main(String[] args) throws SQLException {
        // MySql credentials
        String url = "jdbc:mysql://pgc-sd-bigdata.cyaielc9bmnf.us-east-1.rds.amazonaws.com:3306/pgcdata";
        String user = "******";
        String password = "******";

        // Connection Default Value Initialization
        Connection sqlConnection = null;
        MongoClient mongoClient = null;

        Statement stmt = null;
        try {
            // Creating mongo database connections
            mongoClient = MongoClients.create("mongodb://ec2-54-80-28-54.compute-1.amazonaws.com");
            System.out.println(mongoClient);
            //Creating mongo DB
            MongoDatabase mongoDatabase = mongoClient.getDatabase("pgcdata");
            //Creating mongo collection
            MongoCollection<Document> collection = mongoDatabase.getCollection("products");
            Driver driver= new Driver();

            // Creating SQL database connection
            sqlConnection = DriverManager.getConnection(url, user, password);
            stmt = sqlConnection.createStatement();

            //fetching cameras data
            ResultSet rsCameras = stmt.executeQuery("select * from cameras");
            driver.transferCameras(collection, rsCameras);

            //fetching mobiles data
            ResultSet rsMobile = stmt.executeQuery("select * from mobiles");
            driver.transferMobiles(collection, rsMobile);

            ResultSet rsHeadphones = stmt.executeQuery("select * from headphones");
            driver.transferHeadphones(collection, rsHeadphones);

            //displaying query results

            // List all products in the inventory
            CRUDHelper.displayAllProducts(collection);

            //Display top 5 Mobiles
            CRUDHelper.displayTop5Mobiles(collection);

            //Display products ordered by their categories in Descending Order Without autogenerated Id
            CRUDHelper.displayCategoryOrderedProductsDescending(collection);

            //Display product count in each category
            CRUDHelper.displayProductCountByCategory(collection);

            //Display wired headphones
            CRUDHelper.displayWiredHeadphones(collection);

        }
        catch (SQLException ex) {
            System.out.println("Got Exception.");
            ex.printStackTrace();
        }
        finally {
            // Close Connections
          stmt.close();
          mongoClient.close();
        }
    }

    // Import mobiles data into MongoDb
   public void transferMobiles(MongoCollection<Document> collection, ResultSet rs) throws SQLException
    {
        //begin transfer
        int columnCount = -1, count = 0;
        while (rs.next()) {
            if (columnCount == -1) {
                columnCount = rs.getMetaData().getColumnCount();
            }
            Document document = new Document();
            for (int i = 1; i <= columnCount; i ++) {
                String columnName = rs.getMetaData().getColumnName(i);
                Object value = rs.getObject(i);
                document.put(columnName, value);
            }
            document.put("Category", "Mobiles");
            collection.insertOne(document);
            count ++;
        }
        System.out.println("total mobile transfer: " + count + " lines!");
    }

    // Import cameras data into MongoDb
    public void transferCameras(MongoCollection<Document> collection, ResultSet rs) throws SQLException
    {
        //begin transfer
        int columnCount = -1, count = 0;
        while (rs.next()) {
            if (columnCount == -1) {
                columnCount = rs.getMetaData().getColumnCount();
            }
            Document document = new Document();
            for (int i = 1; i <= columnCount; i ++) {
                String columnName = rs.getMetaData().getColumnName(i);
                Object value = rs.getObject(i);
                document.put(columnName, value);
            }
            document.put("Category", "Cameras");
            collection.insertOne(document);
            count ++;
        }
        System.out.println("total camera transfer: " + count + " lines!");
    }
    // Import headphones data into MongoDb
    public void transferHeadphones(MongoCollection<Document> collection, ResultSet rs) throws SQLException {
        //begin transfer
        int columnCount = -1, count = 0;
        while (rs.next()) {
            if (columnCount == -1) {
                columnCount = rs.getMetaData().getColumnCount();
            }
            Document document = new Document();
            for (int i = 1; i <= columnCount; i++) {
                String columnName = rs.getMetaData().getColumnName(i);
                Object value = rs.getObject(i);
                document.put(columnName, value);
            }
            document.put("Category", "Headphones");
            collection.insertOne(document);
            count++;
        }
        System.out.println("total headphone transfer: " + count + " lines!");
    }
}